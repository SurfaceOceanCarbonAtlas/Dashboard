/**
 * 
 */
package gov.noaa.pmel.dashboard.test.actions;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import gov.noaa.pmel.dashboard.actions.CrossoverChecker;
import gov.noaa.pmel.dashboard.shared.Crossover;
import gov.noaa.pmel.dashboard.shared.DashboardUtils;

import org.junit.Test;

/**
 * @author Karl Smith
 */
public class CrossoverCheckerTest {

	/**
	 * Test method for {@link gov.noaa.pmel.dashboard.actions.CrossoverChecker#checkForCrossover(double[][], double[][], double[][], double[][], double[][])}.
	 */
	@Test
	public void testCheckForCrossoverDoubleArrayArrayDoubleArrayArrayDoubleArrayArrayDoubleArrayArrayDoubleArrayArray() {
		double[][] lons = new double[][] { lons_09AR20120105, lons_353L20120107 };
		double[][] lats = new double[][] { lats_09AR20120105, lats_353L20120107  };
		double[][] times = new double[][] { times_09AR20120105, times_353L20120107 };
		double[][] ssts = new double[][] { ssts_09AR20120105, ssts_353L20120107 };
		double[][] fco2s = new double[][] { fco2s_09AR20120105, fco2s_353L20120107 };

		Crossover cross = CrossoverChecker.checkForCrossover(lons, lats, times, ssts, fco2s);
		assertNotNull( cross );
		String[] expocodes = cross.getExpocodes();
		assertNotNull( expocodes );
		assertNull( expocodes[0] );
		assertNull( expocodes[1] );
		assertEquals( 60.08347567188812, cross.getMinDistance(), 1.0E-12 );
		Integer[] rowNumsAtMin = cross.getRowNumsAtMin();
		assertNotNull( rowNumsAtMin );
		assertEquals( 12, rowNumsAtMin[0].intValue() );
		assertEquals( 4, rowNumsAtMin[1].intValue() );
		Double[] lonsAtMin = cross.getLonsAtMin(); 
		assertNotNull( lonsAtMin );
		assertEquals( 147.238167, lonsAtMin[0], 1.0E-6 );
		assertEquals( 147.103893, lonsAtMin[1], 1.0E-6 );
		Double[] latsAtMin = cross.getLatsAtMin(); 
		assertNotNull( latsAtMin );
		assertEquals( -44.947333, latsAtMin[0], 1.0E-6 );
		assertEquals( -44.950073, latsAtMin[1], 1.0E-6 );
		Long[] timesAtMin = cross.getTimesAtMin(); 
		assertNotNull( timesAtMin );
		assertEquals( 1325807704L, timesAtMin[0].longValue() );
		assertEquals( 1325978045L, timesAtMin[1].longValue() );
		Long[] cruiseMinTimes = cross.getCruiseMinTimes();
		assertNotNull( cruiseMinTimes );
		assertNull( cruiseMinTimes[0] );
		assertNull( cruiseMinTimes[1] );
		Long[] cruiseMaxTimes = cross.getCruiseMaxTimes();
		assertNotNull( cruiseMaxTimes );
		assertNull( cruiseMaxTimes[0] );
		assertNull( cruiseMaxTimes[1] );
	}

	/**
	 * Test method for {@link gov.noaa.pmel.dashboard.actions.CrossoverChecker#distanceBetween(double, double, double, double, double, double)}.
	 */
	@Test
	public void testDistanceBetween() {
		double[] lons = { -5.0, 15.0 };
		double lonDist = DashboardUtils.EARTH_AUTHALIC_RADIUS * Math.abs(lons[1] - lons[0]) * Math.PI / 180.0;
		double[] lats = { 60.0, 75.0 };
		double latDist = DashboardUtils.EARTH_AUTHALIC_RADIUS * Math.abs(lats[1] - lats[0]) * Math.PI / 180.0;
		double[] times = { System.currentTimeMillis() / 1000.0,
				   2560 + (System.currentTimeMillis() / 1000.0) };
		double timeDist = DashboardUtils.SEAWATER_SPEED * Math.abs(times[1] - times[0]) / (60.0 * 60.0 * 24.0);

		double dist;
		// Check longitude distance along the equator 
		dist = CrossoverChecker.distanceBetween(lons[0], 0.0, times[0], lons[1], 0.0, times[0]);
		assertEquals(lonDist, dist, 1.0E-5);
		dist = CrossoverChecker.distanceBetween(lons[1], 0.0, times[0], lons[0], 0.0, times[0]);
		assertEquals(lonDist, dist, 1.0E-5);
		// Check latitude distance along a meridian
		dist = CrossoverChecker.distanceBetween(lons[0], lats[0], times[0], lons[0], lats[1], times[0]);
		assertEquals(latDist, dist, 1.0E-5);
		dist = CrossoverChecker.distanceBetween(lons[0], lats[1], times[0], lons[0], lats[0], times[0]);
		assertEquals(latDist, dist, 1.0E-5);
		// Check a time difference at one location
		dist = CrossoverChecker.distanceBetween(lons[0], lats[0], times[0], lons[0], lats[0], times[1]);
		assertEquals(timeDist, dist, 1.0E-5);
		dist = CrossoverChecker.distanceBetween(lons[0], lats[0], times[1], lons[0], lats[0], times[0]);
		assertEquals(timeDist, dist, 1.0E-5);
		double[] austin = { -97.74306, 30.26715, System.currentTimeMillis() / 1000.0 };
		double[] dallas = { -96.80667, 32.78306, austin[2] + (24.0 * 60.0 * 60.0) };
		double austinDallasDist = 158.5 * 1.8537936;  // 200.0 miles on interstate a few hundred feet above sea level
		double expected = Math.sqrt(austinDallasDist * austinDallasDist + 
									DashboardUtils.SEAWATER_SPEED * DashboardUtils.SEAWATER_SPEED);
		dist = CrossoverChecker.distanceBetween(austin[0], austin[1], austin[2], dallas[0], dallas[1], dallas[2]);
		assertEquals(expected, dist, 1.0);
	}

	/**
	 * Test method for {@link gov.noaa.pmel.dashboard.actions.CrossoverChecker#getMinMaxValidData(double[])}.
	 */
	@Test
	public void testGetMinMaxValidData() {
		double[] minMax = CrossoverChecker.getMinMaxValidData(times_09AR20120105);
		assertEquals( 1325768494.0, minMax[0], 0.1 );
		assertEquals( 1328990968.0, minMax[1], 0.1 );
		minMax = CrossoverChecker.getMinMaxValidData(fco2s_353L20120107);
		assertEquals( 309.493714068311, minMax[0], 1.0E-12 );
		assertEquals( 387.469738780931, minMax[1], 1.0E-12 );
	}

	// All the data is below
	private static final double[] lons_09AR20120105 = {
		147.3715, 147.382333, 147.3765, 147.3835, 147.442, 147.402833, 
		147.364, 147.3235, 147.31, 147.258167, 147.248667, 147.238167, 
		147.154167, 147.072333, 146.896333, 146.8445, 146.696333, 146.423667, 
		146.202167, 146.195667, 146.1265, 146.034, 146.004, 145.899333, 
		145.464667, 145.3335, 145.4035, 145.433667, 145.631667, 145.663333, 
		145.667333, 145.683667, 145.722167, 145.753667, 145.8735, 145.892333, 
		145.9165, 145.921, 145.778333, 145.754667, 145.568667, 145.438167, 
		145.4235, 145.398, 145.419333, 145.437, 145.449833, 145.460333, 
		145.456833, 145.4715, 145.458, 145.456833, 145.4305, 145.456167, 
		145.451333, 145.4405, 145.427333, 145.409167, 145.405167, 145.387, 
		145.392167, 145.385667, 145.365667, 145.380167, 145.4245, 145.5515, 
		145.636, 145.646667, 145.751833, 145.899333, 145.796667, 145.156833, 
		144.978833, 144.743833, 144.7205, 144.528167, 144.3845, 144.330167, 
		144.294167, 144.311, 144.342833, 144.401333, 144.5935, 144.749667, 
		144.8155, 144.799333, 144.5525, 144.585, 144.817833, 144.883, 144.824833, 
		144.818833, 144.633667, 144.5645, 144.217333, 143.771167, 143.683167, 
		143.4665, 142.658, 142.665, 142.6645, 142.655833, 142.643667, 142.607667, 
		142.593167, 142.171667, 142.168167, 142.179833, 142.189, 142.197667, 
		142.209667, 142.226, 142.234667, 142.242333, 142.249, 142.254167, 
		142.384833, 142.4585, 142.472167, 142.477, 142.473167, 142.473333, 
		142.474667, 142.4765, 142.4755, 142.4765, 142.4765, 142.4765, 142.4765, 
		142.4765, 142.4765, 142.4765, 142.4765, 142.4765, 142.4765, 142.4765, 
		142.4765, 142.4765, 142.476667, 142.4765, 142.479833, 142.468167, 
		142.398333, 142.334167, 142.265167, 142.254833, 142.247667, 142.247833, 
		142.249333, 142.253667, 142.255, 142.239667, 142.164167, 142.1585, 
		142.135, 142.114167, 142.108667, 142.0875, 142.101, 142.088667, 142.049, 
		142.044667, 142.043833, 142.035, 142.003667, 141.898167, 141.899333, 
		141.898167, 141.902667, 141.907333, 141.710167, 141.6765, 141.6525, 
		141.557167, 141.486333, 141.4445, 141.171833, 140.409333, 140.313167, 
		140.256833, 140.227833, 139.8555, 138.932667, 142.4765, 138.883167, 
		138.594667, 138.405, 138.093833, 137.574833, 137.516333, 137.290833, 
		137.281333, 137.095833, 136.903, 136.796667, 136.701333, 136.6895, 
		136.6275, 136.272333, 136.0785, 135.9185, 135.845, 135.709333, 
		135.614333, 135.541, 135.51, 134.652333, 134.566667, 134.421167, 
		134.233667, 134.128833, 133.981667, 133.833667, 133.592833, 133.35, 
		132.1715, 130.146667, 128.087833, 126.424, 124.627667, 123.1755, 122.863, 
		122.458667, 119.786167, 118.215833, 117.994167, 117.795833, 117.231667, 
		116.901833, 115.6355, 115.4675, 114.973667, 114.159, 114.076, 113.887167, 
		113.840667, 113.747333, 113.704, 113.528833, 113.5065, 113.436667, 
		113.2995, 113.199333, 113.175833, 113.066167, 112.891, 112.940833, 
		113.063667, 113.106333, 113.160167, 113.202333, 113.232667, 113.246833, 
		113.290833, 113.282667, 113.272667, 113.299833, 113.298333, 113.300833, 
		113.372333, 113.307333, 113.317333, 113.320667, 113.421833, 113.317167, 
		113.312333, 113.309167, 113.296833, 113.296, 114.2815, 115.0095, 
		115.016167, 115.006, 115.0045, 114.999, 115.067833, 115.040333, 
		115.009833, 114.848333, 115.0155, 115.008833, 115.008333, 115.036167, 
		115.032333, 115.018333, 115.001333, 115.016, 115.003667, 115.012333, 
		115.007667, 115.0015, 115.0015, 115.006, 114.919667, 114.936167, 
		114.989167, 114.991833, 114.995, 114.9985, 114.989167, 114.995167, 
		114.995167, 114.9965, 114.997167, 115.002, 115.002667, 115.002833, 
		114.996167, 114.994167, 114.9975, 114.999333, 114.996667, 114.997833, 
		115.002333, 115.002167, 115.002333, 115.009333, 114.9845, 114.974833, 
		114.9595, 114.969667, 114.998, 115.039333, 114.866667, 114.120833, 
		113.781167, 113.8, 114.0215, 114.029667, 114.173, 114.659833, 114.911667, 
		114.693, 114.822667, 114.8865, 114.9035, 115.077167, 115.079, 115.068333, 
		115.067667, 115.3215, 114.924, 114.712667, 114.9455, 115.488333, 
		115.316167 
	};

	private static final double[] lats_09AR20120105 = {
		-42.906, -42.925333, -43.013, -43.061, -43.154833, -43.828667, 
		-44.072333, -44.347, -44.426667, -44.720333, -44.7815, -44.947333, 
		-45.3155, -45.822, -46.9135, -47.216667, -47.944, -49.285667, -50.734167, 
		-50.764, -51.12, -51.717167, -51.848667, -52.379833, -54.564167, 
		-55.2065, -58.068667, -58.635333, -60.728667, -60.965667, -61.005167, 
		-61.1625, -61.560167, -61.825833, -62.9505, -63.151, -63.339, -64.090167, 
		-64.981833, -65.085333, -65.513167, -65.614, -65.632167, -65.713667, 
		-65.7465, -65.782833, -65.836, -65.885333, -65.9245, -66.161, -66.2215, 
		-66.2665, -66.342, -66.445333, -66.5205, -66.563, -66.599833, -66.696667, 
		-66.743167, -66.784333, -66.826, -66.848, -66.879167, -66.951333, 
		-66.974667, -67.0465, -67.099167, -67.105167, -67.162667, -67.226333, 
		-67.1925, -67.043667, -66.988833, -66.902333, -66.895833, -66.824333, 
		-66.7745, -66.765333, -66.7575, -66.746167, -66.730833, -66.696833, 
		-66.640333, -66.523167, -66.363667, -66.254167, -66.172833, -66.180167, 
		-66.217167, -66.207833, -66.125167, -66.061, -65.968667, -65.957167, 
		-65.909167, -65.849667, -65.835167, -65.843667, -65.883, -65.998333, 
		-66.066833, -66.097167, -66.105667, -66.141667, -66.163667, -66.3185, 
		-66.3775, -66.4145, -66.447, -66.47, -66.5115, -66.557167, -66.5755, 
		-66.598, -66.6245, -66.643333, -66.738667, -66.770167, -66.7745, 
		-66.798167, -66.807833, -66.809667, -66.810333, -66.8115, -66.810333, 
		-66.812, -66.812, -66.812, -66.812, -66.812, -66.812, -66.812, 
		-66.811833, -66.812, -66.811833, -66.811833, -66.811833, -66.811833, 
		-66.812333, -66.812333, -66.806667, -66.798333, -66.7775, -66.753667, 
		-66.642167, -66.618, -66.6075, -66.596667, -66.581833, -66.5455, 
		-66.520667, -66.427, -66.352167, -66.313167, -66.235167, -66.145333, 
		-66.122333, -66.0515, -66.039833, -65.915167, -65.788, -65.7545, 
		-65.7425, -65.704167, -65.6045, -65.4265, -65.321333, -65.273167, 
		-65.204833, -65.198833, -64.8015, -64.742167, -64.7045, -64.621833, 
		-64.508, -64.454167, -64.270333, -63.9935, -63.972833, -63.9695, 
		-63.968833, -63.987333, -64.064667, -66.811833, -64.068833, -64.091833, 
		-64.1025, -64.121167, -64.105333, -64.103167, -64.110333, -64.112, 
		-64.112833, -64.111667, -64.112833, -64.113833, -64.113833, -64.114333, 
		-64.116667, -64.122333, -64.127833, -64.130833, -64.134833, -64.136667, 
		-64.138333, -64.139, -64.152833, -64.153333, -64.154667, -64.155667, 
		-64.156333, -64.1575, -64.157833, -64.157833, -64.1575, -64.173333, 
		-64.219833, -64.292, -64.339, -64.384333, -64.413333, -64.423167, 
		-64.438333, -64.492667, -64.577333, -64.587167, -64.5965, -64.629833, 
		-64.648333, -64.746833, -64.7655, -64.840167, -64.991833, -65.011333, 
		-65.063667, -65.076167, -65.0925, -65.098833, -65.1195, -65.121167, 
		-65.127667, -65.151833, -65.196, -65.209, -65.244167, -65.377, 
		-65.307167, -65.175, -65.114, -65.0315, -64.969333, -64.921333, -64.8725, 
		-64.646167, -64.7985, -64.875833, -64.832833, -64.777667, -64.635667, 
		-64.400833, -63.939833, -63.694667, -63.637333, -63.044667, -62.800833, 
		-62.7915, -62.32, -62.207167, -62.042167, -61.633667, -61.506667, 
		-61.098167, -60.913333, -60.757333, -60.452167, -60.3065, -59.923667, 
		-59.285833, -57.189, -53.490667, -51.034333, -50.180167, -49.355833, 
		-49.3225, -48.655833, -47.6105, -47.499667, -46.604667, -46.212333, 
		-45.2915, -45.118167, -44.373333, -43.984, -43.123667, -43.064333, 
		-42.904333, -42.862667, -42.777667, -42.67, -42.3205, -41.9905, 
		-41.363833, -40.7005, -40.293667, -39.956667, -39.9315, -39.761833, 
		-39.6995, -39.5325, -39.408, -39.339, -38.467833, -38.4385, -38.235333, 
		-38.231167, -38.223833, -37.503, -36.531, -36.535667, -36.500667, 
		-36.370833, -35.200333, -34.618667, -34.500167, -34.253833, -34.231667, 
		-34.215167, -34.183333, -34.1825, -34.162167, -34.088667, -34.052, 
		-34.008, -33.941, -33.936833, -33.908167, -33.503, -33.509167, 
		-33.529667, -33.526, -33.182667, -32.785333, -32.655333, -32.468833, 
		-32.261, -31.9675 
	};

	private static final double[] times_09AR20120105 = {
		1325768494, 1325769068, 1325770927, 1325771927, 1325773798, 
		1325786495, 1325791053, 1325796341, 1325797840, 1325803481, 1325804622, 
		1325807704, 1325818410, 1325828179, 1325849407, 1325854188, 1325866465, 
		1325893782, 1325915080, 1325915508, 1325920565, 1325932477, 1325934342, 
		1325942185, 1325978149, 1325988135, 1326062650, 1326070785, 1326101461, 
		1326104886, 1326105457, 1326107740, 1326113684, 1326118397, 1326135285, 
		1326138353, 1326141279, 1326153695, 1326172813, 1326175024, 1326186823, 
		1326190463, 1326190962, 1326193022, 1326193808, 1326194664, 1326195734, 
		1326196661, 1326197374, 1326203763, 1326205358, 1326206427, 1326208139, 
		1326210494, 1326211850, 1326212634, 1326213348, 1326215338, 1326216269, 
		1326217125, 1326217981, 1326218410, 1326219051, 1326227538, 1326228108, 
		1326229822, 1326231105, 1326231248, 1326232603, 1326234459, 1326246954, 
		1326267887, 1326269813, 1326274085, 1326277800, 1326279654, 1326280867, 
		1326281510, 1326286710, 1326287066, 1326287494, 1326288493, 1326290562, 
		1326293136, 1326296408, 1326298554, 1326301336, 1326302192, 1326304056, 
		1326304628, 1326306903, 1326308262, 1326310759, 1326311401, 1326314612, 
		1326319772, 1326320913, 1326322911, 1326330244, 1326333694, 1326337266, 
		1326337908, 1326338122, 1326339192, 1326339763, 1326346042, 1326346969, 
		1326347540, 1326348040, 1326348396, 1326349038, 1326349752, 1326350037, 
		1326350394, 1326350823, 1326351114, 1326353099, 1326353886, 1326354028, 
		1326354743, 1326355103, 1326355889, 1326356245, 1326356531, 1326356816, 
		1326360601, 1326412483, 1326453772, 1326461250, 1326476590, 1326491525, 
		1326497362, 1326586760, 1326633767, 1326676526, 1326691364, 1326738392, 
		1326771557, 1326786902, 1326791851, 1326793778, 1326794063, 1326795062, 
		1326795848, 1326797565, 1326797993, 1326798207, 1326798421, 1326798706, 
		1326799419, 1326799918, 1326801903, 1326803758, 1326804614, 1326806333, 
		1326808271, 1326808770, 1326810269, 1326810982, 1326813613, 1326816254, 
		1326816967, 1326817252, 1326818113, 1326820253, 1326823932, 1326826096, 
		1326827166, 1326829306, 1326829591, 1326839006, 1326840361, 1326841289, 
		1326843786, 1326846703, 1326848058, 1326853495, 1326860795, 1326861651, 
		1326862226, 1326862511, 1326865080, 1326871422, 1326871564, 1326871778, 
		1326873779, 1326875207, 1326877352, 1326881459, 1326882123, 1326885764, 
		1326885978, 1326887262, 1326888546, 1326889259, 1326889901, 1326889973, 
		1326890401, 1326892794, 1326894102, 1326895172, 1326895673, 1326896602, 
		1326897246, 1326897745, 1326897959, 1326903849, 1326904441, 1326905444, 
		1326906735, 1326907450, 1326908448, 1326909447, 1326911088, 1326912729, 
		1326920711, 1326934295, 1326947784, 1326958692, 1326970384, 1326980008, 
		1326982077, 1326984778, 1327003303, 1327013293, 1327014723, 1327016013, 
		1327019714, 1327021855, 1327030535, 1327032129, 1327035920, 1327041596, 
		1327042191, 1327043622, 1327043979, 1327044621, 1327044907, 1327046048, 
		1327046191, 1327046623, 1327047550, 1327048620, 1327048906, 1327049976, 
		1327069489, 1327078971, 1327088606, 1327094815, 1327096813, 1327105866, 
		1327107080, 1327120213, 1327125840, 1327138073, 1327141221, 1327154279, 
		1327155492, 1327158623, 1327169030, 1327212469, 1327218600, 1327220527, 
		1327280341, 1327285259, 1327289553, 1327307306, 1327321656, 1327324943, 
		1327389162, 1327406220, 1327424141, 1327440401, 1327443720, 1327450247, 
		1327466733, 1327473583, 1327498297, 1327593338, 1327832887, 1327928989, 
		1327966751, 1328003711, 1328004282, 1328030182, 1328070953, 1328079792, 
		1328114717, 1328132664, 1328172181, 1328175686, 1328220761, 1328236812, 
		1328300075, 1328327656, 1328351050, 1328351977, 1328353904, 1328356297, 
		1328378487, 1328395956, 1328437614, 1328464986, 1328475755, 1328506364, 
		1328506864, 1328510226, 1328513222, 1328533593, 1328536019, 1328537374, 
		1328582262, 1328582833, 1328586754, 1328586825, 1328586970, 1328620455, 
		1328705290, 1328713131, 1328720622, 1328723463, 1328796386, 1328827895, 
		1328839097, 1328862388, 1328868105, 1328868747, 1328872805, 1328872948, 
		1328875445, 1328884216, 1328888640, 1328892635, 1328900484, 1328901554, 
		1328902410, 1328914825, 1328915039, 1328927263, 1328927905, 1328936319, 
		1328949452, 1328954156, 1328962147, 1328972418, 1328990968 
	};

	private static final double[] ssts_09AR20120105 = {
		18.279, 18.048, 17.91, 17.298, 16.317, 15.493, 15.414, 16.329, 
		16.331, 16.454, 15.535, 13.048, 12.674, 11.758, 10.697, 11.018, 11.57, 
		10.397, 10.342, 11.106, 9.288, 7.41, 7.486, 6.186, 3.25, 3.071, 2.629, 
		2.479, 1.711, 1.813, 1.544, 1.477, 0.973, 1.151, 0.836, 0.738, -0.39, 
		-1.067, -1.423, -1.471, -1.555, -1.557, -1.562, -1.206, -1.151, -1.233, 
		-1.202, -1.165, -1.149, -1.572, -1.627, -1.517, -1.358, -1.539, -1.6, 
		-1.587, -1.548, -1.1, -1.196, -1.21, -1.149, -1.109, -1.093, -1.136, 
		-1.056, -1.111, -1.056, -1.027, -1.056, -0.971, -0.887, -0.874, -0.819, 
		-0.902, -0.934, -0.904, -1.077, -1.088, -1.048, -1.083, -1.18, -1.475, 
		-1.503, -1.563, -1.547, -1.58, -1.597, -1.581, -1.486, -1.555, -1.476, 
		-1.432, -1.349, -1.265, -1.295, -1.38, -1.329, -1.411, -1.387, -1.643, 
		-1.482, -1.395, -1.392, -1.338, -1.36, -1.231, -1.316, -1.316, -1.433, 
		-1.283, -1.341, -1.264, -1.176, -1.545, -1.515, -1.523, -1.482, -1.46, 
		-1.418, -1.43, -1.478, -1.463, -1.436, -1.439, -1.446, -1.435, -1.544, 
		-1.368, -1.379, -1.479, -1.472, -1.396, -1.556, -1.531, -1.419, -1.502, 
		-1.514, -1.404, -1.468, -1.439, -1.474, -1.257, -0.847, -1.505, -1.209, 
		-1.145, -1.108, -0.72, -0.831, -0.418, -0.414, -1.083, -0.95, -0.921, 
		-0.99, -1.01, -1.066, -1.039, -0.94, -1.509, -1.48, -1.373, -1.44, 
		-1.335, -1.42, -1.447, -1.408, -1.5, -1.555, -1.55, -1.448, -1.205, 
		-1.353, -1.447, -1.154, -1.22, -1.405, -0.066, -0.161, -0.953, -0.798, 
		0.035, -0.083, -0.084, -0.047, -0.507, -0.378, 1.044, 0.453, -0.708, 
		-1.691, -1.565, -1.078, -0.387, -0.664, 0.56, -0.443, -0.458, 0.28, 0.18, 
		0.056, 0.652, 0.121, -0.443, -0.045, 1.356, -0.374, -0.508, 0.43, 0.192, 
		1.144, 1.157, 0.768, 0.689, 0.671, 1.229, 1.246, 1.06, 1.061, 0.705, 
		0.738, -0.214, 0.68, 0.271, 0.058, 0.194, -0.043, 0.08, -0.229, -0.308, 
		-0.427, -0.039, -0.601, -0.583, -0.632, -0.448, -0.901, -0.94, -1.078, 
		-1.373, -1.176, -1.035, -1.18, -1.243, -1.528, -1.347, -1.43, -1.113, 
		-1.131, -0.664, -0.675, -0.336, -0.417, -0.335, -0.032, -0.398, -0.132, 
		-0.165, -0.032, 0.303, 0.577, 0.605, 0.576, 0.708, 0.853, 0.896, 0.969, 
		0.869, 0.899, 1.185, 1.134, 1.239, 1.301, 1.154, 1.15, 1.364, 2.373, 
		2.051, 3.023, 4.004, 4.714, 6.195, 7.822, 8.254, 8.371, 9.914, 10.345, 
		10.61, 11.48, 11.211, 11.902, 12.683, 12.736, 13.146, 13.274, 13.781, 
		13.833, 13.866, 14.252, 14.464, 14.469, 14.819, 15.067, 15.199, 17.068, 
		17.603, 16.532, 16.15, 16.792, 16.737, 17.089, 16.641, 16.512, 16.253, 
		18.589, 19.123, 18.999, 20.017, 19.965, 20.703, 21.744, 22.669, 21.462, 
		22.26, 22.544, 22.303, 22.127, 22.578, 22.498, 22.872, 23.098, 23.128, 
		22.955, 23.113, 23.228, 22.987, 22.922, 22.916, 23.035, 23.128, 23.386, 
		23.745, 22.584, 23.66, 23.459, 23.26 
	};

	private static final double[] fco2s_09AR20120105 = {
		382.248420179375, 372.574033523996, 388.020779959466, 
		385.029062705627, 355.200924240082, 333.583016766908, 328.392582093372, 
		318.758342519182, 320.34576093783, 313.249651679413, 321.642155060479, 
		343.059809726421, 337.0806416444, 337.658209251975, 347.227080512806, 
		349.956664031962, 345.304737380666, 349.046016114381, 357.157986632389, 
		349.746327190613, 367.245826993603, 378.570508057239, 379.830287477887, 
		386.002405681006, 381.122855684714, 394.779963198397, 386.14187696842, 
		384.930034220238, 363.30386974191, 368.947545415653, 353.453501007065, 
		355.868966067009, 363.113339002937, 365.49734493605, 364.218671559902, 
		358.785538621765, 362.922506118945, 357.25133596282, 353.621262260108, 
		337.125196614862, 343.60548154156, 348.706338835058, 330.840651078466, 
		262.088107613962, 239.464579719432, 261.296062471369, 259.317734230017, 
		263.822969722079, 246.335210813401, DashboardUtils.FP_MISSING_VALUE, 315.002522656504, 
		305.109809716987, 307.095795907862, 337.122344693781, 342.272273481677, 
		333.734019755684, 343.032774467603, 268.445423260101, 255.66468508656, 
		275.174391519609, 242.934892085287, 251.225913646413, 234.602190096426, 
		233.257087461398, 232.680247805744, 229.717041662243, 193.60216919605, 
		194.180663465935, 205.707473691699, 197.886569869346, 193.691984304748, 
		185.801236486922, 192.173564320956, 205.948951422737, 208.106871097876, 
		209.230103359192, 208.748586360503, 224.381957765912, 225.42415365037, 
		265.770107412134, 283.191008010668, 329.128382855888, 337.424205121479, 
		330.922105904939, 341.156849834237, 339.410065838471, 319.840959367113, 
		321.459992784961, 328.180586045099, 327.822104830282, 299.91666078115, 
		268.170988223222, 267.044178910119, 250.719500897277, 267.773936608702, 
		261.527752947101, 259.2777205604, 265.397616593222, DashboardUtils.FP_MISSING_VALUE, 285.090244723948, 
		274.360759387973, 276.784343607603, 297.072045068333, 295.202577294669, 
		336.105648369938, 339.519186917953, 343.407063221583, 342.818386587934, 
		360.628443931543, 354.142383467615, 322.235704822616, 355.980340012601, 
		315.458185345475, 351.197554658992, 316.533402845359, 313.141665770515, 
		256.185970329037, 266.253748917008, 281.536966849257, 259.766331581135, 
		233.038713673331, 235.643338469182, 232.777657910661, 249.946836283432, 
		233.235673405313, 230.020611936126, 236.520747639309, 240.62456015339, 
		232.059313648944, 235.946524865293, 238.27766608423, 232.167069893251, 
		240.584826849048, 241.583270445552, 252.558123695003, 253.078229620247, 
		252.320689753284, 266.856684008914, 266.955667733075, 259.280769121141, 
		265.341891062913, 282.698866350824, 278.892887127347, 262.154484095749, 
		262.9842095179, 272.602192539033, 312.980952785252, 304.153290674532, 
		288.618450566512, 269.243957483377, 260.309408487782, 286.615866784123, 
		276.059409823705, 280.931512722243, 285.528009088843, 279.903817416999, 
		276.191759798879, 278.855811382262, 270.528803503618, 273.521436429263, 
		269.430000676758, 287.507920786243, 267.886378377605, 293.544191549804, 
		296.900651806034, DashboardUtils.FP_MISSING_VALUE, 316.529053578949, 308.790392678809, 
		309.529610806462, 340.31163155886, 347.112997939635, 356.547720373975, 
		353.653041013955, 352.336054454894, 347.317021952382, 347.545876198088, 
		346.441233737055, 368.357194620065, 366.613062556586, 359.63794992416, 
		360.694315808961, 367.59091170769, 375.02896789134, 373.473562106666, 
		373.873148640137, 370.597626530175, 361.351688217298, 382.917181504745, 
		DashboardUtils.FP_MISSING_VALUE, 358.538840688962, 345.198258972511, 343.572897226037, 
		366.238245876575, 372.425725704713, 365.513761687031, 382.759072734323, 
		367.355602202679, 369.352725760249, DashboardUtils.FP_MISSING_VALUE, 383.606107152794, 
		376.663863268457, 387.247573264981, 375.74655072455, 368.6352811247, 
		376.317983760262, 388.982460322966, DashboardUtils.FP_MISSING_VALUE, 359.279858485802, 
		383.123242892617, 379.135247533297, 394.701735087073, 390.96394263653, 
		389.454748354581, 390.876475531195, 392.5515506164, 394.361361738575, 
		396.932118882059, 387.636096850606, 386.579620783113, 379.958492999486, 
		383.297288557805, 355.53971589125, 384.259878475391, 372.557220191664, 
		377.896885537014, 373.049816204294, 368.580695866992, 363.539158790245, 
		352.936644065766, DashboardUtils.FP_MISSING_VALUE, 344.398084202867, 361.244027317772, DashboardUtils.FP_MISSING_VALUE, 
		318.109948589513, 322.261917441388, 313.278577144074, 314.470843334258, 
		292.49523820962, 310.995384963485, 304.532654168374, 319.279637570998, 
		307.251589647032, 302.531180284512, 303.640803362977, 298.155449750935, 
		300.602183983928, 300.734893417733, 307.598116337469, 310.664097633413, 
		312.937621848911, 318.629082710372, 341.566208815755, 341.591723806078, 
		339.001626293143, 333.429061218029, 343.23927675039, 334.505550821605, 
		331.180884674532, 334.406952002835, 326.672923024446, 335.549870289718, 
		347.414278564323, 357.187629998684, 362.099735798666, 369.848992071955, 
		370.874356371301, 367.773649323648, 358.588581842438, 346.446057015401, 
		353.054677536996, 347.966641799085, 356.132667133274, 355.92119532471, DashboardUtils.FP_MISSING_VALUE, 
		366.622310567565, 352.349902206521, 371.890182441762, 367.777783889932, 
		376.36618019399, 383.931751368172, 381.957040383066, 388.721113930681, 
		386.541100305176, 391.332934327189, DashboardUtils.FP_MISSING_VALUE, 378.797685529626, 
		378.488185209781, 372.221203366638, DashboardUtils.FP_MISSING_VALUE, 367.077293478595, 
		365.182307831536, 357.61127972952, DashboardUtils.FP_MISSING_VALUE, 348.340359211622, 342.07328730745, 
		345.821710424799, 357.855842668733, 352.819063933469, DashboardUtils.FP_MISSING_VALUE, DashboardUtils.FP_MISSING_VALUE, 
		359.152754588387, 361.052605587672, 354.309356885953, 357.423871869684, 
		352.329071314389, 336.362117313155, 334.950596654825, 351.783346429266, 
		348.563610430927, 347.795621810318, 337.454591844882, 340.176194193696, 
		356.696626059126, 364.76004315224, 401.485754434194, 352.327551154098, DashboardUtils.FP_MISSING_VALUE, 
		343.652290842771, 340.711619900341, 343.635212178599, 345.06443804692, 
		350.513460712158, 355.006476784752, 348.609493969735, 363.343230266163, 
		357.017669664048, 355.792722525615, 360.906293244295, 363.761888989256, 
		360.387095013105, 359.124244986979, 367.372405612558, 356.938123752822, 
		365.216450773706, 363.227333632855, 350.81403030252, 353.918278984266, 
		352.58560891501, 340.856020874117, 343.804078671367, 362.128677139642, 
		361.60433808739, 364.035239648751, 356.104115392805, 363.760133018429, 
		361.40453363745 
	};

	private static final double[] lons_353L20120107 = {
		147.2491133, 147.1242233, 147.1149667, 147.1038933, 147.0419217, 
		146.9497833, 146.9383517, 146.88132, 146.86171, 146.7955983, 146.6072467, 
		146.573075, 146.4993233, 145.8822433, 145.816725, 145.7811467, 
		145.6872217, 145.5689933, 145.5204167, 145.5007367, 145.4320717, 
		145.386325, 145.2763583, 145.1573117, 144.9248567, 144.15878, 
		143.8566217, 143.822495, 143.59588, 143.4327083, 143.0399217, 142.997855, 
		142.993565, 142.981945, 142.9871133, 142.982465, 142.96165, 143.0095483, 
		142.8137517 
	};

	private static final double[] lats_353L20120107 = {
		-44.16840167, -44.80393333, -44.86566833, -44.95007333, 
		-45.26920333, -45.57494833, -45.60798833, -45.77759167, -45.84292, 
		-46.06290667, -46.82391833, -46.96343, -47.32297667, -49.86977, 
		-50.038195, -50.13293833, -50.38983, -50.74694833, -50.95801833, 
		-51.069375, -51.33767, -51.50416167, -51.84963333, -52.16409167, 
		-52.89528167, -55.43690833, -57.77893333, -57.96641667, -58.81755833, 
		-59.46607667, -61.44712333, -61.68453833, -62.71391333, -62.81918167, 
		-62.94531, -63.25605833, -63.68865833, -64.23928, -64.54589 
	};

	private static final double[] times_353L20120107 = {
		1325963667, 1325975328, 1325976458, 1325978045, 1325984053, 
		1325989958, 1325990592, 1325993894, 1325995160, 1325999461, 1326014187, 
		1326016822, 1326023684, 1326073761, 1326076901, 1326078644, 1326083420, 
		1326090152, 1326093973, 1326095984, 1326101095, 1326104363, 1326111446, 
		1326118074, 1326133511, 1326188389, 1326241473, 1326245535, 1326262827, 
		1326275331, 1326311439, 1326315927, 1326335126, 1326337068, 1326339382, 
		1326345192, 1326353257, 1326363178, 1326369506 
	};

	private static final double[] ssts_353L20120107 = {
		16.298, 16.358, 13.961, 12.993, 13.054, 12.887, 12.008, 12.904, 
		11.968, 11.886, 10.848, 11.379, 10.48, 10.618, 10.886, 11.184, 10.64, 
		9.818, 9.374, 8.368, 8.31, 7.511, 7.821, 7.795, 6.003, 2.899, 2.456, 
		2.535, 2.406, 2.986, 2.024, 1.37, 0.882, 0.708, 0.76, 0.606, 0.443, 
		0.633, -1.096 
	};

	private static final double[] fco2s_353L20120107 = {
		311.698952308972, 314.139407179203, 309.493714068311, 
		340.725606791838, 331.182362018347, 340.299382061299, 333.16643879323, 
		340.215060385161, 338.60108673904, 341.04194604536, 347.746126550073, 
		339.613000040417, DashboardUtils.FP_MISSING_VALUE, 356.698922379513, 351.043314012183, 
		348.885021386104, 353.092479423243, 363.608547595615, 361.604664466921, 
		DashboardUtils.FP_MISSING_VALUE, 370.15949545442, 378.127990322985, 387.469738780931, DashboardUtils.FP_MISSING_VALUE, 
		380.874314596119, 378.506086707137, 376.837157353496, 384.919664163242, 
		DashboardUtils.FP_MISSING_VALUE, 367.966155139812, 368.000699431963, 350.778403187297, DashboardUtils.FP_MISSING_VALUE, 
		368.338781682715, 358.249081384324, DashboardUtils.FP_MISSING_VALUE, 359.859678913034, 
		364.893364508143, 354.720805231615 
	};

}
