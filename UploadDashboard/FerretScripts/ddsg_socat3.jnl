! ddsg_socat3.jnl
! ACM 5/16/2014

! Compute and apply sampling for a single-trajectory dsg file
! using piecewise linear interpolation

! Uses the external function piecewise3.so
! This script contains a list of the variables in the input
! files. This allows us to create the decimated dsg file
! with the exact same names as in the input files.
!
! THIS WAS REMOVED at R18201: 8/19/2014
! WOCE flags are not used in the decimated datasets, as they may change in the
! full data. Keep them in the file for a consistent set of variables, but mark 
! them with the unused flag "M".

! 7/2016, change to missing-value when inheriting attributes.
! 10/2016 Changes to just handle all the variables present in the files 
!         instead of fixed lists of variables. All metadata variables on the 
!         traj axis are saved as-is, variables on the obs axis are decimated.

! arguments: 
!  input_file single dsg file
!  output_file to write
! 

CAN MODE VER
DEFINE SYMBOL infile = ($1)
DEFINE SYMBOL outfile = ($2)

! Set the tolerances and control parameter

DEFINE SYMBOL tol_lon = 1
DEFINE SYMBOL tol_lat = 1
DEFINE SYMBOL tol_var = 4

LET tol1 = ($tol_lon)
LET tol2 = ($tol_lat)
let tol3 = ($tol_var)

LET control = 2

USE "($infile)"

! The names in the input and output file must match.
! To accomplish that we will rename the variables in the input file.

let allvars = ..varnames
LET nvars =  ..nvars

! Will also add nobs_deci


! Which longitude to use for decimating: lon360 or longitude

let dlon = minmax(longitude[i=@ddf])
let dlon360 = minmax(lon360[i=@ddf])

IF `abs(dlon[i=@max]) LT abs(dlon360[i=@max])` THEN
   DEFINE SYMBOL lonvar = longitude
ELSE
   DEFINE SYMBOL lonvar = lon360
ENDIF

LET sample_vars = {"($lonvar)", "latitude", "fCO2_recommended"}
LET sample_pts= piecewise3(($lonvar), latitude, fCO2_recommended, `control`, `tol1`, `tol2`, `tol3`)
LOAD sample_pts

DEFINE SYMBOL output_filename = ($outfile)

! File will get all the global attributes

set att/out=all .
can mode upcase

! Single-point axis for instance direction

! The decimated dsg file have been written with a trajectory axis named traj.

SET AXIS/NAME=traj `num_obs,RETURN=eaxis`
LET ee = _e[ge=traj]

! obs axis for sampled observation variables
 
SET AXIS/NAME=obj_in `longitude,RETURN=xaxis`
LET nsample = `sample_pts[i=@ngd]`
DEFINE AXIS/x=1:`nsample`:1 obs_def
SET AXIS/NAME=obs obs_def
LET samplevar = sample_pts[gx=obs@asn]



! New num_obs variable with number of sampled data
! Make sure it has the right sample_dimension attribute

SET VAR/name=num_obs_in num_obs
LET/BAD=-99 num_obs = RESHAPE(nsample,ee)
SET ATT/LIKE=num_obs_in num_obs
DEFINE ATT/QUIET/OUTPUT num_obs.sample_dimension = "`num_obs_in.sample_dimension`"
SET ATT/OUTPUT=all num_obs
DEFINE SYMBOL num_obs_sampled = `nsample`

! write a global attribute with the decimation parameters.
DEFINE ATT/QUIET/OUTPUT ..decimation =  \
"`nobs_full` original number of obs. Piecewise decimated to ($num_obs_sampled) obs using tolerances: lon ($tol_lon), lat ($tol_lon), fco2_rec ($tol_var) ($comment)" 

SAVE/QUIET/FILE="($outfile)"/OUTTYPE=INT/CLOBBER num_obs

! Write the rest of the metadata variables unchanged.

DEFINE SYMBOL oshape = `($lonvar),RETURN=shape`

REPEAT/RANGE=2:`nvars`/NAME=v (DEFINE SYMBOL v = `v`;\
DEFINE SYMBOL vname = `allvars[i=($v)]`;\
DEFINE SYMBOL shape = `($vname),RETURN=shape`;\
IF `($shape"0|POINT>1|E>1|*>0") NE 1` THEN exit/cycle;\
SET ATT/OUTPUT=all ($vname);\
SAVE/QUIET/FILE="($outfile)"/APPEND ($vname);\
)

! Add nobs_deci on the same axis
SET VAR/NAME=nobs_deci_in nobs_deci
LET/TITLE="`nobs_deci_in,RETURN=title`"/BAD=-99 nobs_deci = ($num_obs_sampled) + 0* nobs_full
DEFINE ATTRIBUTE/OUTPUT/OUTPUT nobs_deci.note = "Piecewise decimated"
SAVE/QUIET/FILE="($outfile)"/APPEND/OUTTYPE=int nobs_deci


! Sample the obs variables. Keep attributes, make missing-data flags match.

! The renaming stuff lets us keep original variable names.
! The variables used in the sampling function need some special handling.

SET VAR/NAME=($lonvar)_in ($lonvar)
SET VAR/NAME=latitude_in latitude
SET VAR/NAME=fCO2_recommended_in fCO2_recommended

LET sample_pts= PIECEWISE3(($lonvar)_in, latitude_in, fCO2_recommended_in, `control`, `tol1`, `tol2`, `tol3`)

LET/BAD=`($lonvar)_in,RETURN=bad,PREC=9` ($lonvar) = SAMPLE_FAST_I(($lonvar)_in, samplevar)
SET ATT/LIKE=($lonvar)_in ($lonvar)
SET ATT/OUTPUT=all ($lonvar)
SAVE/QUIET/APPEND/FILE="($outfile)" ($lonvar)

LET/BAD=`latitude_in,RETURN=bad,PREC=9` latitude = SAMPLE_FAST_I(latitude_in, samplevar)
SET ATT/LIKE=latitude_in latitude
SET ATT/OUTPUT=all latitude
SAVE/QUIET/APPEND/FILE="($outfile)" latitude

LET/BAD=`fCO2_recommended_in,RETURN=bad,PREC=9` fCO2_recommended = SAMPLE_FAST_I(fCO2_recommended_in, samplevar)
SET ATT/LIKE=fCO2_recommended_in fCO2_recommended
SET ATT/OUTPUT=all fCO2_recommended
SAVE/QUIET/APPEND/FILE="($outfile)" fCO2_recommended

! Restore the original definitions

cancel var ($lonvar), latitude, fCO2_recommended
SET VAR/NAME=($lonvar) ($lonvar)_in
SET VAR/NAME=latitude latitude_in
SET VAR/NAME=fCO2_recommended fCO2_recommended_in

LET sample_pts= piecewise3(($lonvar), latitude, fCO2_recommended, `control`, `tol1`, `tol2`, `tol3`)


! Numeric variables that are on the obs axis

REPEAT/RANGE=2:`nvars`/NAME=v (DEFINE SYMBOL v = `v`;\
DEFINE SYMBOL vname = `allvars[i=($v)]`;\
IF `IS_ELEMENT_OF_STR_N ("($vname)", sample_vars)` THEN exit/cycle;\
DEFINE SYMBOL vtype = `($vname),RETURN=dtype`;\
IF ($vtype"0|CHAR>1|*>0") THEN exit/cycle;\
DEFINE SYMBOL shape = `($vname),RETURN=shape`;\
IF `($shape"0|($oshape)>1|*>0") NE 1` THEN exit/cycle;\
SET VAR/name=($vname)_in ($vname);\
LET/BAD=`($vname)_in,RETURN=bad,PREC=9` ($vname) = SAMPLE_FAST_I(($vname)_in, samplevar);\
SET ATT/LIKE=($vname)_in ($vname);\
SET ATT/OUTPUT=all ($vname);\
SAVE/QUIET/APPEND/OUTTYPE=($vtype)/FILE="($outfile)" ($vname);\
CANCEL VAR ($vname);\
SET VAR/NAME=($vname) ($vname)_in;\
)

! sample_number will be the sequence number within the decimated data
! We can use this to pick up the pen when drawing lines where the constraints 
! (on the decimated set) have skipped data

LET/BAD=-1/TITLE="sequence number for decimated dataset" sample_number = i[gx=samplevar]
SAVE/QUIET/APPEND/OUTTYPE=INT/FILE="($outfile)" sample_number

! Character variables that are on the obs axis

REPEAT/RANGE=1:`nvars`/NAME=v (DEFINE SYMBOL v = `v`;\
DEFINE SYMBOL vname = `allvars[i=($v)]`;\
DEFINE SYMBOL vtype = `($vname),RETURN=dtype`;\
IF `($vtype"0|CHAR>1|*>0") EQ 0` THEN EXIT/CYCLE;\
DEFINE SYMBOL shape = `($vname),RETURN=shape`;\
IF `($shape"0|($oshape)>1|*>0") NE 1` THEN exit/cycle;\
SET VAR/name=($vname)_in ($vname);\
LET ($vname)_s = SAMPLEI(($vname)_in, samplevar);\
LET ($vname) = RESHAPE(($vname)_s, x[gx=obs]);\
SET ATT/LIKE=($vname)_in ($vname);\
SET ATT/OUTPUT=all ($vname);\
SAVE/QUIET/APPEND/FILE="($outfile)" ($vname);\
CANCEL VAR ($vname);\
SET VAR/NAME=($vname) ($vname)_in;\
)

can data/all
can var/all
can sym/all
can axis/all
