! SOCAT_format_title_units.jnl
! Sep 2011 Ansley Manke
! Dec 2017 Fixes for formatting with Ferret/PyFerret
!
! Edit title and units strings, so that if they contain CO2 then the 2 is subscripted,
! and if the units are umol or uatm, then the micro- is written as the Greek letter.
!
! This script uses an ascii file escapeit.dat.  It's checked in to the SOCAT
! customization but it should be installed in the Ferret datasets directory
! as listed in the FER_DATA section of FerretBackendConfig.xml 

! Deal with an empty units string
IF `($data_($num)_units%1|"">1|*>0%) OR ($data_($num)_units%1|" ">1|*>0%)`  THEN 
   CANCEL SYMBOL data_($num)_units
ENDIF

! The variables may have been renamed, if this is a listing, vname becomes vname_in.
! Refer to the right name.

DEFINE SYMBOL vcode = var
IF ($its_listing"0|*>1") THEN DEFINE SYMBOL vcode var_in

IF `($data_($num)_units%0|" ">0|text>0|none>0|*>1%) EQ 0` THEN CANCEL SYMBOL data_($num)_units

! There should never be a blank title
IF `($data_($num)_title%1|"">1|*>0%) OR ($data_($num)_title%1|" ">1|*>0%)`  THEN 
   DEFINE SYMBOL data_($num)_units = ($data_($num)_($vcode))
ENDIF

! Not currently coloring by platform_name/vessel_name or investigators 
! Investigators, platform_name/vessel_name should get one color per unique value.
! dataset_name is unique per cruise, so color it as if its expocode.

! IF ($data_($num)_($vcode)"0|platform_name>1|investigators>1|*>0") THEN 
!   MESSAGE/ERROR **ERROR Color by --- ($data_($num)_($vcode)) --- is not implemented
!   EXIT/PROGRAM
! ENDIF

IF ($data_($num)_($vcode)"0|dataset_name>1|platform_name>1|vessel_name>1|investigators>1|organization>1|*>0") THEN 
    DEFINE SYMBOL data_($num)_title = ($data_($num)_title) ID
    DEFINE SYMBOL ferret_plot_key = 0
    DEFINE SYMBOL ferret_key_annotate = 0
    DEFINE SYMBOL ferret_palette = ten_bright_levels
ENDIF

LET uptitle = UPCASE("($data_($num)_title)")

IF `STRCMP(uptitle, "FCO2_REC") EQ 0` THEN
   DEFINE SYMBOL data_($num)_title = fCO2 RECOMMENDED
   IF `($data_($num)_units"0|*>1") EQ 0` THEN DEFINE SYMBOL data_($num)_units = uatm
ENDIF

IF `($num) LT (($data_count) -1) AND ($data_($num)_($vcode)"0|region_id>1|*>0") AND \
 (($its_trajectory_map"0|1|*>0) EQ 0)` THEN
   DEFINE SYMBOL note_num = `($note_num"0") + 1`
   DEFINE SYMBOL r_id = 1=NPac,2=TPac,4=South,5=Ind,6=NAtl,7=Cst,8=TAtl,10=Arc
   DEFINE SYMBOL note_($note_num)_lab = Region IDs: ($r_id)
   IF ($its_listing"0|*>1") THEN DEFINE SYMBOL data_($num)_units = ($r_id)
ENDIF

IF ($its_listing"0|*>1") THEN EXIT/SCRIPT 

! Define a character variable containing the ESCAPE character
columns/type=text/var=escchar escapeit.dat

! Define the title string for use in an html annotations header.

IF ($data_($num)_title"0|*>1") THEN

   LET data_($num)_title = "($data_($num)_title)"
   LET data_($num)_title_new = "($data_($num)_title)"

   DEFINE SYMBOL uptitle = `UPCASE("($data_($num)_title)")`
   IF `STRINDEX("($uptitle)", "CO2") GT 0` THEN

      LET slen = `STRLEN("($data_($num)_title)")`
      LET n1 = `STRINDEX("($uptitle)", "CO2")`
      LET n2 = `n1+3`
      let str1 = SUBSTRING("($data_($num)_title)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_title)", n1+2, slen)

      IF `n2 LT slen` THEN 
         let str2 = SUBSTRING("($data_($num)_title)", n1+2,  n2-(n1+2))
         let str3 = SUBSTRING("($data_($num)_title)", n2, slen)
	 list str2, str3
      ENDIF
      LET tit1 = str1
      LET tit2 = STRCAT(tit1, "<sub>")

      LET tit3 = STRCAT(tit2, str2); list/nohead tit3
      LET tit4 = STRCAT(tit3, "</sub>"); list/nohead tit4
      LET tit5 = tit4
      IF `n2 GT 0 AND n2 LT slen` THEN LET tit5 = STRCAT(tit4, str3); list/nohead tit5

      LET data_($num)_title = "`tit5`"
      LET data_($num)_title_new = "`tit5`"
      
      DEFINE SYMBOL uptitle = `UPCASE(data_($num)_title_new)`

   ENDIF

! CO2 may appear twice in a title   
   IF `STRINDEX("($uptitle)", "CO2") GT 0` THEN

      LET slen = `STRLEN("($uptitle)")`
      LET n1 = `STRINDEX("($uptitle)", "CO2")`
      LET n2 = `n1+3`
      let str1 = SUBSTRING(data_($num)_title_new, 1, n1+1)
      let str2 = SUBSTRING(data_($num)_title_new, n1+2, slen)
      list str1, str2
      IF `n2 LT slen` THEN 
         let str2 = SUBSTRING(data_($num)_title_new, n1+2,  n2-(n1+2))
         let str3 = SUBSTRING(data_($num)_title_new, n2, slen)
	 list str2, str3
      ENDIF

      LET tit1 = str1
      LET tit2 = STRCAT(tit1, "<sub>")

      LET tit3 = STRCAT(tit2, str2); list/nohead tit3
      LET tit4 = STRCAT(tit3, "</sub>"); list/nohead tit4
      LET tit5 = tit4
      IF `n2 GT 0 AND n2 LT slen` THEN LET tit5 = STRCAT(tit4, str3); list/nohead tit5
      LET data_($num)_title = "`tit5`"

   ENDIF

! Now define the title for use by Ferret on an axis in the prop-prop plots. 

   IF `($num) LE 1 AND ($program_name"0|Ferret>1|*>0")` THEN
   DEFINE SYMBOL uptitle = `UPCASE("($data_($num)_title)")`
   IF `STRINDEX("($uptitle)", "CO2") GT 0` THEN

      LET slen = `STRLEN("($uptitle)")`
      LET n1 = `STRINDEX("($uptitle)", "CO2")`
      let str1 = SUBSTRING("($data_($num)_title)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_title)", n1+2, slen)

      LET tit1 = STRCAT(str1, escchar)
      LET tit2 = STRCAT(tit1, "@SR_")
      LET tit3 = STRCAT(tit2, "@AS"); list/nohead tit3
      LET tit4 = STRCAT(tit3, str2); list/nohead tit4
      LET tit5 = STRCAT(tit4, escchar); list/nohead tit3
      LET tit6 = STRCAT(tit5, "@SR"); list/nohead tit6
      let tit7 = tit6
      DEFINE SYMBOL data_($num)_title_new = `tit7`
      DEFINE SYMBOL data_($num)_title = `tit7`
      DEFINE SYMBOL uptitle = `UPCASE("($data_($num)_title_new)")`
      
   ENDIF

! CO2 may appear twice in a title   
   IF `STRINDEX("($uptitle)", "CO2") GT 0` THEN

      LET slen = `STRLEN("($uptitle)")`
      LET n1 = `STRINDEX("($uptitle)", "CO2")`
      let str1 = SUBSTRING("($data_($num)_title_new)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_title_new)", n1+2, slen-(n1+2))
      let str2 = SUBSTRING("($data_($num)_title_new)", n1+2, slen)

      LET tit1 = STRCAT(str1, escchar)
      LET tit2 = STRCAT(tit1, "@SR_")
      LET tit3 = STRCAT(tit2, "@AS")
      LET tit4 = STRCAT(tit3, str2)

      DEFINE SYMBOL data_($num)_title = `tit4`

!      LET tit3as = STRCAT(tit2, "@AS")
!      LET tit4as = STRCAT(tit3as, str2)
!      DEFINE SYMBOL data_($num)_title = `tit4as`

   ENDIF
   
   ENDIF ! num le 1 and Ferret not PyFerret

ENDIF

! If units contain CO2 then change formatting so 2 is subscripted
! If units contain micro then change formatting so its drawn as a Greek letter 

IF ($data_($num)_units"0|*>1") THEN
 IF `($num) LE 1` THEN
   LET data_($num)_units = " (($data_($num)_units))"
   IF ($data_($num)_units"0|text>1|*>0") THEN LET data_units = " "

   DEFINE SYMBOL have_units_($vcode) = 1
   DEFINE SYMBOL upunits = `UPCASE("($data_($num)_units)")`

   IF `STRINDEX("($upunits)", "CO2") GT 0` THEN

      LET slen = `STRLEN("($data_($num)_units)")`
      LET n1 = `STRINDEX("($upunits)", "CO2")`
      LET n2 = `n1+3`
      let str1 = SUBSTRING("($data_($num)_units)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_units)", n1+2, slen)
      list str1, str2
      IF `n2 LT slen` THEN 
         let str2 = SUBSTRING("($data_($num)_units)", n1+2,  n2-(n1+2))
         let str3 = SUBSTRING("($data_($num)_units)", n2, slen)
	 list str2, str3
      ENDIF

      LET tit1 = str1
      LET tit2 = STRCAT(tit1, "<sub>")

      LET tit3 = STRCAT(tit2, str2); list/nohead tit3
      LET tit4 = STRCAT(tit3, "</sub>"); list/nohead tit4
      LET tit5 = tit4
      IF `n2 GT 0 AND n2 LT slen` THEN LET tit5 = STRCAT(tit4, str3); list/nohead tit5
      DEFINE SYMBOL data_($num)_units = `tit5`

      LET data_($num)_units = " (($data_($num)_units))"   
      DEFINE SYMBOL have_units_($vcode) = 1
   ENDIF
   
   DEFINE SYMBOL upunits = `UPCASE("($data_($num)_units)")`

   IF `STRINDEX("($upunits)", "CO2") GT 0` THEN

      LET slen = `STRLEN("($data_($num)_units)")`

      LET slen = `STRLEN("($data_($num)_units)")`
      LET n1 = `STRINDEX("($upunits)", "CO2")`
      LET n2 = `n1+1`
      let str1 = SUBSTRING("($data_($num)_units)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_units)", n1+2, slen)
      list str1, str2
      IF `n2 LT slen` THEN 
         let str2 = SUBSTRING("($data_($num)_units)", n1+2,  n2-(n1+2))
         let str3 = SUBSTRING("($data_($num)_units)", n2, slen)
	 list str2, str3
      ENDIF

      LET tit1 = str1
      LET tit2 = STRCAT(tit1, "<sub>")

      LET tit3 = STRCAT(tit2, str2); list/nohead tit3
      LET tit4 = STRCAT(tit3, "</sub>"); list/nohead tit4
      LET tit5 = tit4
      IF `n2 GT 0 AND n2 LT slen` THEN LET tit5 = STRCAT(tit4, str3); list/nohead tit5
      DEFINE SYMBOL data_($num)_units = `tit5`

      LET data_($num)_units = " (($data_($num)_units))"  
      DEFINE SYMBOL have_units_($vcode) = 1
   ENDIF

   IF `STRCMP("($upunits)", "UATM") EQ 0` THEN
      LET data_($num)_units = " (&mu\;atm)"  ! Write Greek letter code for html
      DEFINE SYMBOL have_units_($vcode) = 1
   ENDIF


   IF `STRCMP("($upunits)", "UMOL") EQ 0` THEN
      LET data_($num)_units = " (&mu\;mol)"  ! Write Greek letter code for html
      DEFINE SYMBOL have_units_($vcode) = 1
   ENDIF

   IF `STRCMP("($upunits)", "UMOL/MOL") EQ 0` THEN
      LET data_($num)_units = " (&mu\;mol/mol)"  ! Write Greek letter code for html
      DEFINE SYMBOL have_units_($vcode) = 1
   ENDIF

! Now define the units for use by Ferret on an axis in the prop-prop plots.  

   IF `STRINDEX("($upunits)", "CO2") GT 0 AND ($program_name"0|Ferret>1|*>0)` THEN

      LET slen = `STRLEN("($data_($num)_units)")`
      LET n1 = `STRINDEX("($upunits)", "CO2")`
      let str1 = SUBSTRING("($data_($num)_units)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_units)", n1+2, slen-(n1+2))
      let str2 = SUBSTRING("($data_($num)_units)", n1+2, slen)

      LET tit1 = STRCAT(str1, escchar)
      LET tit2 = STRCAT(tit1, "@SR_")
      LET tit3 = STRCAT(tit2, "@AS")
      LET tit4 = STRCAT(tit3, str2)

      DEFINE SYMBOL data_($num)_units = `tit4`
   ENDIF
   
   DEFINE SYMBOL upunits = `UPCASE("($data_($num)_units)")`
   IF `STRINDEX("($upunits)", "CO2") GT 0 AND ($program_name"0|Ferret>1|*>0)` THEN

      LET slen = `STRLEN("($data_($num)_units)")`
      LET n1 = `STRINDEX("($upunits)", "CO2")`
      let str1 = SUBSTRING("($data_($num)_units)", 1, n1+1)
      let str2 = SUBSTRING("($data_($num)_units)", n1+2, slen-(n1+2))
      let str2 = SUBSTRING("($data_($num)_units)", n1+2, slen)

      LET tit1 = STRCAT(str1, escchar)
      LET tit2 = STRCAT(tit1, "@SR_")
      LET tit3 = STRCAT(tit2, "@AS")
      LET tit4 = STRCAT(tit3, str2)

      DEFINE SYMBOL data_($num)_units = `tit4`
   ENDIF

   IF `STRINDEX("($upunits)", "UATM") GT 0 AND ($program_name"0|Ferret>1|*>0)` THEN
      LET n1 = `STRINDEX("($upunits)", "UATM")`
      LET slen = `STRLEN("($data_($num)_units)")`
      let str1 = SUBSTRING("($data_($num)_units)", 1, n1)
      let str2 = SUBSTRING("($data_($num)_units)", n1+4, slen-(n1+3))

      let ustr1 = STRCAT(str1, escchar)
      if `n1 LE 1` THEN let ustr1 = escchar
      let ustr2 = strcat(ustr1, "@SGm@SRatm")
      let ustr3 = strcat(ustr2, "@AS")  ! WHY
      let ustr3 = ustr2
      DEFINE SYMBOL data_($num)_units = `ustr3`
   ENDIF

   IF `STRINDEX("($upunits)", "UMOL") GT 0 AND ($program_name"0|Ferret>1|*>0)` THEN
      LET n1 = `STRINDEX("($upunits)", "UMOL")`
      LET slen = `STRLEN("($data_($num)_units)")`

      let str1 = SUBSTRING("($data_($num)_units)", 1, n1)
      let str2 = SUBSTRING("($data_($num)_units)", n1+4, slen-(n1+3))
      let str2 = SUBSTRING("($data_($num)_units)", n1+4, slen)

      let ustr1 = STRCAT(str1, escchar)
      if `n1 LE 1` THEN let ustr1 = escchar
      let ustr2 = strcat(ustr1, "@SGm@SRmol")
      let ustr3 = strcat(ustr2, "@AS")  ! WHY
      let ustr3 = ustr2
      let ustr4 = strcat(ustr3, str2)
      DEFINE SYMBOL data_($num)_units = `ustr4`
   ENDIF

 ENDIF !  IF `($num) LE 1` THEN
ENDIF

CANCEL DATA escapeit.dat

! Update the values of data_title, data_units


DEFINE SYMBOL uptitle = `UPCASE("($data_($num)_title) ($data_($num)_units)" )`
IF `(STRINDEX("($uptitle)", "TIME") GT 0) AND (STRINDEX("($uptitle)", " SINCE ") GT 0)` THEN \
 LET data_($num)_units = " "

IF ($data_($num)_units"0|text>1|*>0") THEN LET data_($num)_units = " "

IF `($num"0|0|*>1") EQ 0` THEN
   IF ($data_($num)_title"0|1|*>1") THEN DEFINE SYMBOL data_title ($data_($num)_title)
   IF ($data_($num)_units"0|1|*>1") THEN DEFINE SYMBOL data_units ($data_($num)_units)
ENDIF

IF `( ($its_prop_prop_plot"0|*>1") EQ 0) AND (($num"0|0|*>1") EQ 0)` THEN
   IF ($data_($num)_title"0|1|*>1") THEN LET data_title data_($num)_title
   IF ($data_($num)_units"0|1|*>1") THEN LET data_units = data_($num)_units 
   DEFINE SYMBOL variable_lab_($vcode) = 1
ENDIF

! Ticket 1596
! A set of vars which we will treat for plotting only, as we do the expocode.
! 9/2016: handle this in SOCAT_initialize and SOCAT_custom_vars instead.

! Hack: Will ignore constraints in PP plots for metadata variables
DEFINE SYMBOL ignore_vars = 1
LET ignore_constraints = {"dataset_name","platform_name","vessel_name","investigators","organization"}

! End of file ------------SOCAT_format_title_units.jnl--------------------------
