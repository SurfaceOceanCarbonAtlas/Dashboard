! SOCAT_check_dtime.jnl

! Put an extra gap between points where delta-time is over specified # days
LET day_tol = 2
LET twoday = day_tol*24*60*60  ! 2 days of seconds

LET two_day_gaps = if time_with_gaps[i=@ddf] GT `twoday` then 1
LET add_time_gaps = `two_day_gaps[i=@ngd] GT 0` 

IF `add_time_gaps EQ 0` THEN EXIT/SCRIPT

! Now put an extra gap between points where delta-time is more than specified # days

DEFINE AXIS/X=1:`npts`:1 ax_with_gaps
LET ii_with_gaps = i[gx=ax_with_gaps]
LET twoday = COMPRESSI(two_day_gaps * ii_with_gaps)
LET ntimegaps = twoday[i=@ngd]

! Construct a variable like ($rowvar) with lengths between time-gaps of n days
LET timegaps = ESEQUENCE(twoday[i=1:`ntimegaps`])
LET tlen = twoday[i=1:`ntimegaps`]
LET timelens = IF tlen[i=@ddb] THEN tlen[i=@ddb] ELSE tlen

LET timegaps = ESEQUENCE(XCAT(timelens,`npts-timelens[i=@sum]`) )

! The variables now get an extra gap where there is a long delta-time.

LET/units="`lon_with_gaps,return=units`" x_var_data = SEPARATE(lon_with_gaps, timegaps, 0)
LET/units="`lat_with_gaps,return=units`" y_var_data = SEPARATE(lat_with_gaps, timegaps, 0)

IF ($is_string"0") THEN 
   DEFINE SYMBOL vardef = `var_data,return=title`
   LET/units="`var_with_gaps,return=units`" var_data = SEPARATE_STR(var_with_gaps, timegaps, 0)
   IF ($vardef"0|COLOR_VAR>1|*>0") THEN LET/units="`var_with_gaps,return=units`" var_data  = SEPARATE(color_var, timegaps, 0)
ELSE
   LET/units="`var_with_gaps,return=units`" var_data  = SEPARATE(var_with_gaps, timegaps, 0)
ENDIF

!---------------- end of SOCAT_check_dtime.jnl -------------------------
